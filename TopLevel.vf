////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : TopLevel.vf
// /___/   /\     Timestamp : 12/16/2020 00:16:54
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath "C:/Users/Tree/Desktop/Digital Lab/VGA_Graphic_Card/ipcore_dir" -intstyle ise -family spartan6 -verilog "C:/Users/Tree/Desktop/Digital Lab/VGA_Graphic_Card/TopLevel.vf" -w "C:/Users/Tree/Desktop/Digital Lab/VGA_Graphic_Card/TopLevel.sch"
//Design Name: TopLevel
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FTC_HXILINX_TopLevel(Q, C, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
  
   
 
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(T)
          Q <= !Q;
     end
   
endmodule
`timescale  100 ps / 10 ps

module M8_1E_HXILINX_TopLevel (O, D0, D1, D2, D3, D4, D5, D6, D7, E, S0, S1, S2);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  D4;
   input  D5;
   input  D6;
   input  D7;
   input  E;
   input  S0;
   input  S1;
   input  S2;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or D4 or D5 or D6 or D7 or E or S0 or S1 or S2)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S2,S1,S0})
        3'b000 : O <= D0;
        3'b001 : O <= D1;
        3'b010 : O <= D2;
        3'b011 : O <= D3;
        3'b100 : O <= D4;
        3'b101 : O <= D5;
        3'b110 : O <= D6;
        3'b111 : O <= D7;
        endcase
      end
   end
    
endmodule
`timescale 100 ps / 10 ps

module CD4CE_HXILINX_TopLevel(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   parameter TERMINAL_COUNT = 4'b1001;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;

	else if (CE)
          begin
             if ({Q3,Q2,Q1,Q0} == 4'b1001)
               {Q3,Q2,Q1,Q0} <= 4'b0000;
             else if({Q3,Q2,Q1,Q0} == 4'b1011)
               {Q3,Q2,Q1,Q0} <= 4'b0110;
             else if({Q3,Q2,Q1,Q0} == 4'b1101)
               {Q3,Q2,Q1,Q0} <= 4'b0100;
             else if({Q3,Q2,Q1,Q0} == 4'b1111)
               {Q3,Q2,Q1,Q0} <= 4'b0010;
            
             else
	      {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
          end
     end
   
   assign CEO = TC & CE;
   assign TC = CLR ? 1'b0 : ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module Image_MUSER_TopLevel(ADDRESS, 
                            CLK_IN, 
                            ENA, 
                            SEL_3BIT, 
                            OUT_BIN);

    input [13:0] ADDRESS;
    input CLK_IN;
    input ENA;
    input [2:0] SEL_3BIT;
   output [7:0] OUT_BIN;
   
   wire [0:0] XLXN_11;
   wire [7:0] XLXN_17;
   wire [7:0] XLXN_97;
   wire [7:0] XLXN_101;
   wire [7:0] XLXN_105;
   wire [7:0] XLXN_106;
   wire [7:0] XLXN_107;
   wire [7:0] XLXN_121;
   
   city0  XLXI_6 (.addra(ADDRESS[13:0]), 
                 .clka(CLK_IN), 
                 .dina(), 
                 .ena(ENA), 
                 .wea(XLXN_11[0]), 
                 .douta(XLXN_17[7:0]));
   GND  XLXI_7 (.G(XLXN_11[0]));
   (* HU_SET = "XLXI_13_0_7" *) 
   M8_1E_HXILINX_TopLevel  XLXI_13_0 (.D0(XLXN_17[0]), 
                                     .D1(XLXN_101[0]), 
                                     .D2(XLXN_105[0]), 
                                     .D3(XLXN_106[0]), 
                                     .D4(XLXN_107[0]), 
                                     .D5(XLXN_97[0]), 
                                     .D6(), 
                                     .D7(), 
                                     .E(XLXN_121[0]), 
                                     .S0(SEL_3BIT[0]), 
                                     .S1(SEL_3BIT[1]), 
                                     .S2(SEL_3BIT[2]), 
                                     .O(OUT_BIN[0]));
   (* HU_SET = "XLXI_13_1_6" *) 
   M8_1E_HXILINX_TopLevel  XLXI_13_1 (.D0(XLXN_17[1]), 
                                     .D1(XLXN_101[1]), 
                                     .D2(XLXN_105[1]), 
                                     .D3(XLXN_106[1]), 
                                     .D4(XLXN_107[1]), 
                                     .D5(XLXN_97[1]), 
                                     .D6(), 
                                     .D7(), 
                                     .E(XLXN_121[1]), 
                                     .S0(SEL_3BIT[0]), 
                                     .S1(SEL_3BIT[1]), 
                                     .S2(SEL_3BIT[2]), 
                                     .O(OUT_BIN[1]));
   (* HU_SET = "XLXI_13_2_5" *) 
   M8_1E_HXILINX_TopLevel  XLXI_13_2 (.D0(XLXN_17[2]), 
                                     .D1(XLXN_101[2]), 
                                     .D2(XLXN_105[2]), 
                                     .D3(XLXN_106[2]), 
                                     .D4(XLXN_107[2]), 
                                     .D5(XLXN_97[2]), 
                                     .D6(), 
                                     .D7(), 
                                     .E(XLXN_121[2]), 
                                     .S0(SEL_3BIT[0]), 
                                     .S1(SEL_3BIT[1]), 
                                     .S2(SEL_3BIT[2]), 
                                     .O(OUT_BIN[2]));
   (* HU_SET = "XLXI_13_3_4" *) 
   M8_1E_HXILINX_TopLevel  XLXI_13_3 (.D0(XLXN_17[3]), 
                                     .D1(XLXN_101[3]), 
                                     .D2(XLXN_105[3]), 
                                     .D3(XLXN_106[3]), 
                                     .D4(XLXN_107[3]), 
                                     .D5(XLXN_97[3]), 
                                     .D6(), 
                                     .D7(), 
                                     .E(XLXN_121[3]), 
                                     .S0(SEL_3BIT[0]), 
                                     .S1(SEL_3BIT[1]), 
                                     .S2(SEL_3BIT[2]), 
                                     .O(OUT_BIN[3]));
   (* HU_SET = "XLXI_13_4_3" *) 
   M8_1E_HXILINX_TopLevel  XLXI_13_4 (.D0(XLXN_17[4]), 
                                     .D1(XLXN_101[4]), 
                                     .D2(XLXN_105[4]), 
                                     .D3(XLXN_106[4]), 
                                     .D4(XLXN_107[4]), 
                                     .D5(XLXN_97[4]), 
                                     .D6(), 
                                     .D7(), 
                                     .E(XLXN_121[4]), 
                                     .S0(SEL_3BIT[0]), 
                                     .S1(SEL_3BIT[1]), 
                                     .S2(SEL_3BIT[2]), 
                                     .O(OUT_BIN[4]));
   (* HU_SET = "XLXI_13_5_2" *) 
   M8_1E_HXILINX_TopLevel  XLXI_13_5 (.D0(XLXN_17[5]), 
                                     .D1(XLXN_101[5]), 
                                     .D2(XLXN_105[5]), 
                                     .D3(XLXN_106[5]), 
                                     .D4(XLXN_107[5]), 
                                     .D5(XLXN_97[5]), 
                                     .D6(), 
                                     .D7(), 
                                     .E(XLXN_121[5]), 
                                     .S0(SEL_3BIT[0]), 
                                     .S1(SEL_3BIT[1]), 
                                     .S2(SEL_3BIT[2]), 
                                     .O(OUT_BIN[5]));
   (* HU_SET = "XLXI_13_6_1" *) 
   M8_1E_HXILINX_TopLevel  XLXI_13_6 (.D0(XLXN_17[6]), 
                                     .D1(XLXN_101[6]), 
                                     .D2(XLXN_105[6]), 
                                     .D3(XLXN_106[6]), 
                                     .D4(XLXN_107[6]), 
                                     .D5(XLXN_97[6]), 
                                     .D6(), 
                                     .D7(), 
                                     .E(XLXN_121[6]), 
                                     .S0(SEL_3BIT[0]), 
                                     .S1(SEL_3BIT[1]), 
                                     .S2(SEL_3BIT[2]), 
                                     .O(OUT_BIN[6]));
   (* HU_SET = "XLXI_13_7_0" *) 
   M8_1E_HXILINX_TopLevel  XLXI_13_7 (.D0(XLXN_17[7]), 
                                     .D1(XLXN_101[7]), 
                                     .D2(XLXN_105[7]), 
                                     .D3(XLXN_106[7]), 
                                     .D4(XLXN_107[7]), 
                                     .D5(XLXN_97[7]), 
                                     .D6(), 
                                     .D7(), 
                                     .E(XLXN_121[7]), 
                                     .S0(SEL_3BIT[0]), 
                                     .S1(SEL_3BIT[1]), 
                                     .S2(SEL_3BIT[2]), 
                                     .O(OUT_BIN[7]));
   city1  XLXI_15 (.addra(ADDRESS[13:0]), 
                  .clka(CLK_IN), 
                  .dina(), 
                  .ena(ENA), 
                  .wea(XLXN_11[0]), 
                  .douta(XLXN_101[7:0]));
   city2  XLXI_16 (.addra(ADDRESS[13:0]), 
                  .clka(CLK_IN), 
                  .dina(), 
                  .ena(ENA), 
                  .wea(XLXN_11[0]), 
                  .douta(XLXN_105[7:0]));
   city3  XLXI_17 (.addra(ADDRESS[13:0]), 
                  .clka(CLK_IN), 
                  .dina(), 
                  .ena(ENA), 
                  .wea(XLXN_11[0]), 
                  .douta(XLXN_106[7:0]));
   city4  XLXI_18 (.addra(ADDRESS[13:0]), 
                  .clka(CLK_IN), 
                  .dina(), 
                  .ena(ENA), 
                  .wea(XLXN_11[0]), 
                  .douta(XLXN_107[7:0]));
   city5  XLXI_19 (.addra(ADDRESS[13:0]), 
                  .clka(CLK_IN), 
                  .dina(), 
                  .ena(ENA), 
                  .wea(XLXN_11[0]), 
                  .douta(XLXN_97[7:0]));
   VCC  XLXI_23_0 (.P(XLXN_121[0]));
   VCC  XLXI_23_1 (.P(XLXN_121[1]));
   VCC  XLXI_23_2 (.P(XLXN_121[2]));
   VCC  XLXI_23_3 (.P(XLXN_121[3]));
   VCC  XLXI_23_4 (.P(XLXN_121[4]));
   VCC  XLXI_23_5 (.P(XLXN_121[5]));
   VCC  XLXI_23_6 (.P(XLXN_121[6]));
   VCC  XLXI_23_7 (.P(XLXN_121[7]));
endmodule
`timescale 1ns / 1ps

module TEN_DIV_MUSER_TopLevel(CLK_INPUT, 
                              CLR_DATA, 
                              CLK_OUT);

    input CLK_INPUT;
    input CLR_DATA;
   output CLK_OUT;
   
   wire XLXN_1;
   
   (* HU_SET = "XLXI_1_8" *) 
   CD4CE_HXILINX_TopLevel  XLXI_1 (.C(CLK_INPUT), 
                                  .CE(XLXN_1), 
                                  .CLR(CLR_DATA), 
                                  .CEO(), 
                                  .Q0(), 
                                  .Q1(), 
                                  .Q2(), 
                                  .Q3(), 
                                  .TC(CLK_OUT));
   VCC  XLXI_2 (.P(XLXN_1));
endmodule
`timescale 1ns / 1ps

module TWO_DIV_MUSER_TopLevel(CLK_INPUT, 
                              CLR_DATA, 
                              CLK_OUT);

    input CLK_INPUT;
    input CLR_DATA;
   output CLK_OUT;
   
   wire XLXN_2;
   
   (* HU_SET = "XLXI_1_9" *) 
   FTC_HXILINX_TopLevel  XLXI_1 (.C(CLK_INPUT), 
                                .CLR(CLR_DATA), 
                                .T(XLXN_2), 
                                .Q(CLK_OUT));
   VCC  XLXI_2 (.P(XLXN_2));
endmodule
`timescale 1ns / 1ps

module DIVIDER_20Mhz_TO_1Hz_MUSER_TopLevel(CLK_INPUT, 
                                           CLR_DATA, 
                                           PAUSE_BUTT, 
                                           CLK_OUT);

    input CLK_INPUT;
    input CLR_DATA;
    input PAUSE_BUTT;
   output CLK_OUT;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_59;
   wire XLXN_61;
   wire XLXN_62;
   
   TWO_DIV_MUSER_TopLevel  XLXI_1 (.CLK_INPUT(XLXN_61), 
                                  .CLR_DATA(CLR_DATA), 
                                  .CLK_OUT(CLK_OUT));
   TEN_DIV_MUSER_TopLevel  XLXI_2 (.CLK_INPUT(XLXN_1), 
                                  .CLR_DATA(CLR_DATA), 
                                  .CLK_OUT(XLXN_2));
   TEN_DIV_MUSER_TopLevel  XLXI_3 (.CLK_INPUT(XLXN_2), 
                                  .CLR_DATA(CLR_DATA), 
                                  .CLK_OUT(XLXN_3));
   TEN_DIV_MUSER_TopLevel  XLXI_6 (.CLK_INPUT(XLXN_3), 
                                  .CLR_DATA(CLR_DATA), 
                                  .CLK_OUT(XLXN_4));
   TEN_DIV_MUSER_TopLevel  XLXI_7 (.CLK_INPUT(XLXN_4), 
                                  .CLR_DATA(CLR_DATA), 
                                  .CLK_OUT(XLXN_5));
   TEN_DIV_MUSER_TopLevel  XLXI_12 (.CLK_INPUT(XLXN_5), 
                                   .CLR_DATA(CLR_DATA), 
                                   .CLK_OUT(XLXN_6));
   TEN_DIV_MUSER_TopLevel  XLXI_24 (.CLK_INPUT(XLXN_6), 
                                   .CLR_DATA(CLR_DATA), 
                                   .CLK_OUT(XLXN_61));
   AND2  XLXI_27 (.I0(PAUSE_BUTT), 
                 .I1(CLK_INPUT), 
                 .O(XLXN_62));
   INV  XLXI_28 (.I(XLXN_62), 
                .O(XLXN_59));
   TEN_DIV_MUSER_TopLevel  XLXI_31 (.CLK_INPUT(XLXN_59), 
                                   .CLR_DATA(CLR_DATA), 
                                   .CLK_OUT(XLXN_1));
endmodule
`timescale 1ns / 1ps

module BUTT_CTR_MUSER_TopLevel(PAUSE_BUTT, 
                               RESET_BUTT, 
                               PAUSE_TIME, 
                               RESET_TIME);

    input PAUSE_BUTT;
    input RESET_BUTT;
   output PAUSE_TIME;
   output RESET_TIME;
   
   wire XLXN_1;
   wire XLXN_3;
   wire PAUSE_TIME_DUMMY;
   
   assign PAUSE_TIME = PAUSE_TIME_DUMMY;
   (* HU_SET = "XLXI_1_10" *) 
   FTC_HXILINX_TopLevel  XLXI_1 (.C(PAUSE_BUTT), 
                                .CLR(XLXN_3), 
                                .T(XLXN_1), 
                                .Q(PAUSE_TIME_DUMMY));
   VCC  XLXI_2 (.P(XLXN_1));
   GND  XLXI_4 (.G(XLXN_3));
   AND2B1  XLXI_5 (.I0(PAUSE_TIME_DUMMY), 
                  .I1(RESET_BUTT), 
                  .O(RESET_TIME));
endmodule
`timescale 1ns / 1ps

module TopLevel(I_BUT, 
                I_BUT_SAFE, 
                OSC, 
                PAUSE_BUT, 
                PAUSE_BUT_SAFE, 
                PM_SW, 
                PM_SW_SAFE, 
                COLOR_VALUE, 
                HSYNC, 
                H_OUTPUT, 
                L0, 
                L1, 
                L2, 
                L3, 
                L4, 
                L5, 
                L6, 
                L7, 
                MN0, 
                MN1, 
                MN2, 
                MN3, 
                MN4, 
                MN5, 
                MN6, 
                MN7, 
                OE, 
                PAUSE_OUT, 
                POS, 
                TEST_RGB, 
                VSYNC, 
                V_OUTPUT);

    input I_BUT;
    input I_BUT_SAFE;
    input OSC;
    input PAUSE_BUT;
    input PAUSE_BUT_SAFE;
    input PM_SW;
    input PM_SW_SAFE;
   output [7:0] COLOR_VALUE;
   output HSYNC;
   output [9:0] H_OUTPUT;
   output L0;
   output L1;
   output L2;
   output L3;
   output L4;
   output L5;
   output L6;
   output L7;
   output MN0;
   output MN1;
   output MN2;
   output MN3;
   output MN4;
   output MN5;
   output MN6;
   output MN7;
   output OE;
   output PAUSE_OUT;
   output [2:0] POS;
   output [2:0] TEST_RGB;
   output VSYNC;
   output [9:0] V_OUTPUT;
   
   wire [13:0] A_IN;
   wire dfcsdfs;
   wire [2:0] Q;
   wire XLXN_33;
   wire XLXN_35;
   wire XLXN_302;
   wire XLXN_303;
   wire XLXN_370;
   wire XLXN_384;
   wire XLXN_401;
   wire XLXN_405;
   wire XLXN_476;
   wire XLXN_485;
   wire XLXN_486;
   wire XLXN_487;
   wire XLXN_491;
   wire XLXN_498;
   wire PAUSE_OUT_DUMMY;
   wire OE_DUMMY;
   wire [9:0] H_OUTPUT_DUMMY;
   wire [9:0] V_OUTPUT_DUMMY;
   
   assign H_OUTPUT[9:0] = H_OUTPUT_DUMMY[9:0];
   assign OE = OE_DUMMY;
   assign PAUSE_OUT = PAUSE_OUT_DUMMY;
   assign V_OUTPUT[9:0] = V_OUTPUT_DUMMY[9:0];
   TWO_DIV_MUSER_TopLevel  XLXI_13 (.CLK_INPUT(XLXN_405), 
                                   .CLR_DATA(XLXN_35), 
                                   .CLK_OUT(XLXN_476));
   AND2  XLXI_14 (.I0(XLXN_33), 
                 .I1(OSC), 
                 .O(XLXN_405));
   VCC  XLXI_15 (.P(XLXN_33));
   GND  XLXI_16 (.G(XLXN_35));
   hvsync_generator  XLXI_44 (.clk(XLXN_476), 
                             .CounterX(H_OUTPUT_DUMMY[9:0]), 
                             .CounterY(V_OUTPUT_DUMMY[9:0]), 
                             .inDisplayArea(OE_DUMMY), 
                             .vga_h_sync(), 
                             .vga_v_sync());
   VGADemo  XLXI_46 (.clk_25(XLXN_476), 
                    .hsync_out(HSYNC), 
                    .pixel(TEST_RGB[2:0]), 
                    .vsync_out(VSYNC));
   BUF  XLXI_55 (.I(H_OUTPUT_DUMMY[1]), 
                .O(A_IN[0]));
   BUF  XLXI_56 (.I(H_OUTPUT_DUMMY[2]), 
                .O(A_IN[1]));
   BUF  XLXI_57 (.I(H_OUTPUT_DUMMY[3]), 
                .O(A_IN[2]));
   BUF  XLXI_58 (.I(H_OUTPUT_DUMMY[5]), 
                .O(A_IN[4]));
   BUF  XLXI_59 (.I(H_OUTPUT_DUMMY[7]), 
                .O(A_IN[6]));
   BUF  XLXI_60 (.I(V_OUTPUT_DUMMY[4]), 
                .O(A_IN[8]));
   BUF  XLXI_61 (.I(V_OUTPUT_DUMMY[6]), 
                .O(A_IN[10]));
   BUF  XLXI_62 (.I(V_OUTPUT_DUMMY[8]), 
                .O(A_IN[12]));
   BUF  XLXI_63 (.I(H_OUTPUT_DUMMY[4]), 
                .O(A_IN[3]));
   BUF  XLXI_64 (.I(H_OUTPUT_DUMMY[6]), 
                .O(A_IN[5]));
   BUF  XLXI_65 (.I(V_OUTPUT_DUMMY[3]), 
                .O(A_IN[7]));
   BUF  XLXI_66 (.I(V_OUTPUT_DUMMY[5]), 
                .O(A_IN[9]));
   BUF  XLXI_67 (.I(V_OUTPUT_DUMMY[7]), 
                .O(A_IN[11]));
   BUF  XLXI_68 (.I(V_OUTPUT_DUMMY[9]), 
                .O(A_IN[13]));
   BUTT_CTR_MUSER_TopLevel  XLXI_178 (.PAUSE_BUTT(XLXN_302), 
                                     .RESET_BUTT(), 
                                     .PAUSE_TIME(PAUSE_OUT_DUMMY), 
                                     .RESET_TIME());
   AND2  XLXI_179 (.I0(XLXN_303), 
                  .I1(XLXN_485), 
                  .O(XLXN_302));
   VCC  XLXI_180 (.P(XLXN_303));
   DIVIDER_20Mhz_TO_1Hz_MUSER_TopLevel  XLXI_207 (.CLK_INPUT(XLXN_405), 
                                                 .CLR_DATA(), 
                                                 .PAUSE_BUTT(PAUSE_OUT_DUMMY), 
                                                 .CLK_OUT(dfcsdfs));
   Image_MUSER_TopLevel  XLXI_209 (.ADDRESS(A_IN[13:0]), 
                                  .CLK_IN(XLXN_476), 
                                  .ENA(OE_DUMMY), 
                                  .SEL_3BIT(Q[2:0]), 
                                  .OUT_BIN(COLOR_VALUE[7:0]));
   BUF  XLXI_211_0 (.I(Q[0]), 
                   .O(POS[0]));
   BUF  XLXI_211_1 (.I(Q[1]), 
                   .O(POS[1]));
   BUF  XLXI_211_2 (.I(Q[2]), 
                   .O(POS[2]));
   XOR2  XLXI_213 (.I0(XLXN_370), 
                  .I1(dfcsdfs), 
                  .O(XLXN_384));
   AND2  XLXI_214 (.I0(XLXN_401), 
                  .I1(XLXN_491), 
                  .O(XLXN_370));
   INV  XLXI_215 (.I(PAUSE_OUT_DUMMY), 
                 .O(XLXN_401));
   up_down_counter  XLXI_241 (.Clk(XLXN_384), 
                             .reset(), 
                             .UpOrDown(XLXN_498), 
                             .Count(Q[2:0]));
   BUF  XLXI_243 (.I(dfcsdfs), 
                 .O(L0));
   BUF  XLXI_244 (.I(dfcsdfs), 
                 .O(L1));
   BUF  XLXI_245 (.I(dfcsdfs), 
                 .O(L2));
   BUF  XLXI_246 (.I(dfcsdfs), 
                 .O(L3));
   BUF  XLXI_247 (.I(dfcsdfs), 
                 .O(L4));
   BUF  XLXI_248 (.I(dfcsdfs), 
                 .O(L5));
   BUF  XLXI_249 (.I(dfcsdfs), 
                 .O(L6));
   BUF  XLXI_250 (.I(dfcsdfs), 
                 .O(L7));
   BUF  XLXI_251 (.I(XLXN_33), 
                 .O(MN0));
   BUF  XLXI_252 (.I(XLXN_33), 
                 .O(MN1));
   BUF  XLXI_253 (.I(XLXN_33), 
                 .O(MN2));
   BUF  XLXI_254 (.I(XLXN_33), 
                 .O(MN3));
   BUF  XLXI_255 (.I(XLXN_33), 
                 .O(MN4));
   BUF  XLXI_256 (.I(XLXN_33), 
                 .O(MN5));
   BUF  XLXI_257 (.I(XLXN_33), 
                 .O(MN6));
   BUF  XLXI_258 (.I(XLXN_33), 
                 .O(MN7));
   BUF  XLXI_266 (.I(PAUSE_BUT_SAFE), 
                 .O(XLXN_486));
   BUF  XLXI_267 (.I(I_BUT_SAFE), 
                 .O(XLXN_487));
   OR2  XLXI_269 (.I0(PAUSE_BUT), 
                 .I1(XLXN_486), 
                 .O(XLXN_485));
   OR2  XLXI_270 (.I0(XLXN_487), 
                 .I1(I_BUT), 
                 .O(XLXN_491));
   OR2  XLXI_271 (.I0(PM_SW_SAFE), 
                 .I1(PM_SW), 
                 .O(XLXN_498));
endmodule
